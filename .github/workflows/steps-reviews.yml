name: Check Steps App Reviews

on:
  schedule:
    - cron: "0 * * * *"   # hourly; change to "0 13 * * *" for daily at 13:00 UTC
  workflow_dispatch: {}

jobs:
  check:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write

    env:
      APP_ID: "1602546738"
      COUNTRY: "us"
      STATE_FILE: ".data/review_count.txt"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Check review count
        id: check
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p .data

          json="$(curl -s "https://itunes.apple.com/lookup?id=${APP_ID}&country=${COUNTRY}")"
          current_count="$(printf '%s' "$json" | jq -r '.results[0].userRatingCount')"

          if [[ -z "${current_count}" || "${current_count}" == "null" ]]; then
            echo "Failed to read userRatingCount from API." >&2
            exit 1
          fi

          if [[ -f "${STATE_FILE}" ]]; then
            prev_count="$(cat "${STATE_FILE}")"
          else
            prev_count="0"
          fi

          changed="false"
          diff="0"

          if (( current_count > prev_count )); then
            changed="true"
            diff=$(( current_count - prev_count ))
            echo "${current_count}" > "${STATE_FILE}"
          fi

          {
            echo "changed=${changed}"
            echo "current_count=${current_count}"
            echo "prev_count=${prev_count}"
            echo "diff=${diff}"
          } >> "$GITHUB_OUTPUT"

      - name: Commit updated state if changed
        if: steps.check.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .data/review_count.txt
          git commit -m "chore(state): update review_count to ${{ steps.check.outputs.current_count }}"
          git push

      - name: Notify via GitHub Issue
        if: steps.check.outputs.changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const diff = "${{ steps.check.outputs.diff }}";
            const current = "${{ steps.check.outputs.current_count }}";
            const prev = "${{ steps.check.outputs.prev_count }}";
            const title = `New App Store reviews: +${diff} (now ${current})`;
            const body = [
              `Steps (US store) total reviews increased from **${prev}** to **${current}** ðŸŽ‰`,
              ``,
              `Lookup: https://itunes.apple.com/lookup?id=1602546738&country=us`,
              `App: https://apps.apple.com/us/app/steps-simple-pedometer/id1602546738`
            ].join('\n');
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              body
            })

      # Optional: Slack webhook notification (set repo secret SLACK_WEBHOOK_URL)
      - name: Notify Slack (optional)
        if: steps.check.outputs.changed == 'true' && env.SLACK_WEBHOOK_URL != ''
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          payload=$(jq -n --arg diff "${{ steps.check.outputs.diff }}" \
                         --arg current "${{ steps.check.outputs.current_count }}" \
                         --arg prev "${{ steps.check.outputs.prev_count }}" \
                         --arg url "https://apps.apple.com/us/app/steps-simple-pedometer/id1602546738" \
                         '{text: ("Steps reviews +" + $diff + " (now " + $current + "; prev " + $prev + ")\n" + $url)}')
          curl -s -X POST -H 'Content-type: application/json' --data "$payload" "$SLACK_WEBHOOK_URL"
