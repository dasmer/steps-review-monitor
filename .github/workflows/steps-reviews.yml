name: Check Steps App Reviews

on:
  schedule:
    # hourly (use this first; you can switch to daily later)
    - cron: "0 * * * *"
  workflow_dispatch: {}

jobs:
  check:
    runs-on: ubuntu-latest
    permissions:
      contents: write    # to commit the updated state file
      issues: write      # to open an issue notification
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Run check
        id: check
        run: |
          chmod +x scripts/check_reviews.sh
          ./scripts/check_reviews.sh

      - name: Commit updated state if changed
        if: steps.check.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .data/review_count.txt
          git commit -m "chore(state): update review_count to ${{ steps.check.outputs.current_count }}"
          git push

      - name: Notify via GitHub Issue (opens a new one each time)
        if: steps.check.outputs.changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const diff = core.getInput('diff');
            const current = core.getInput('current');
            const prev = core.getInput('prev');
            const title = `New App Store reviews: +${diff} (now ${current})`;
            const body = [
              `Steps (US store) total reviews increased from **${prev}** to **${current}** ðŸŽ‰`,
              ``,
              `Lookup: https://itunes.apple.com/lookup?id=1602546738&country=us`,
              `App: https://apps.apple.com/us/app/steps-simple-pedometer/id1602546738`
            ].join('\n');
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              body
            });
          inputs: |
            diff: ${{ steps.check.outputs.diff }}
            current: ${{ steps.check.outputs.current_count }}
            prev: ${{ steps.check.outputs.prev_count }}

      # (Optional) Slack webhook notification
      - name: Notify Slack (optional)
        if: steps.check.outputs.changed == 'true' && env.SLACK_WEBHOOK_URL != ''
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          payload=$(jq -n --arg diff "${{ steps.check.outputs.diff }}" \
                         --arg current "${{ steps.check.outputs.current_count }}" \
                         --arg prev "${{ steps.check.outputs.prev_count }}" \
                         --arg url "https://apps.apple.com/us/app/steps-simple-pedometer/id1602546738" \
                         '{text: ("Steps reviews +" + $diff + " (now " + $current + "; prev " + $prev + ")\n" + $url)}')
          curl -s -X POST -H 'Content-type: application/json' --data "$payload" "$SLACK_WEBHOOK_URL"

